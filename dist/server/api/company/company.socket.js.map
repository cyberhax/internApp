{"version":3,"sources":["api/company/company.socket.js"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;QAOgB,Q,GAAA,Q;;AALhB;;;;;;AAEA;AACA,IAAI,SAAS,CAAC,MAAD,EAAS,QAAT,CAAb;;AAEO,SAAS,QAAT,CAAkB,MAAlB,EAA0B;AAC/B;AACA,OAAK,IAAI,IAAI,CAAR,EAAW,eAAe,OAAO,MAAtC,EAA8C,IAAI,YAAlD,EAAgE,GAAhE,EAAqE;AACnE,QAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,QAAI,WAAW,eAAe,aAAa,KAA5B,EAAmC,MAAnC,CAAf;;AAEA,sBAAc,EAAd,CAAiB,KAAjB,EAAwB,QAAxB;AACA,WAAO,EAAP,CAAU,YAAV,EAAwB,eAAe,KAAf,EAAsB,QAAtB,CAAxB;AACD;AACF;;AAGD,SAAS,cAAT,CAAwB,KAAxB,EAA+B,MAA/B,EAAuC;AACrC,SAAO,UAAS,GAAT,EAAc;AACnB,WAAO,IAAP,CAAY,KAAZ,EAAmB,GAAnB;AACD,GAFD;AAGD;;AAED,SAAS,cAAT,CAAwB,KAAxB,EAA+B,QAA/B,EAAyC;AACvC,SAAO,YAAW;AAChB,sBAAc,cAAd,CAA6B,KAA7B,EAAoC,QAApC;AACD,GAFD;AAGD","file":"api/company/company.socket.js","sourcesContent":["/**\n * Broadcast updates to client when the model changes\n */\n\n'use strict';\n\nimport CompanyEvents from './company.events';\n\n// Model events to emit\nvar events = ['save', 'remove'];\n\nexport function register(socket) {\n  // Bind model events to socket events\n  for (var i = 0, eventsLength = events.length; i < eventsLength; i++) {\n    var event = events[i];\n    var listener = createListener('company:' + event, socket);\n\n    CompanyEvents.on(event, listener);\n    socket.on('disconnect', removeListener(event, listener));\n  }\n}\n\n\nfunction createListener(event, socket) {\n  return function(doc) {\n    socket.emit(event, doc);\n  };\n}\n\nfunction removeListener(event, listener) {\n  return function() {\n    CompanyEvents.removeListener(event, listener);\n  };\n}\n"],"sourceRoot":"/source/"}